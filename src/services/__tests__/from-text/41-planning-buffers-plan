Sort  (cost=585066.84..585066.85 rows=1 width=473) (actual time=156773.141..156784.582 rows=498 loops=1)
  Output: (replace((au.login)::text, ((eeof.nom_enseigne)::text || '_'::text), ''::text)), ((ph.attr -> '96'::text)), ((ph.attr -> '253'::text)), eau.civilite, au.nom, au.prenom, eau.mail_representant, eau.telephone, ((ph.attr -> '382'::text)), ((ph.attr -> '11'::text)), eau.date_inscription, eau.nombre_connexion, eau.date_derniere_connexion, (COALESCE((sum(euuo.points)), '0'::numeric)), (COALESCE((sum(euuo_1.points)), '0'::numeric)), (COALESCE((sum(eodc.points)), '0'::numeric)), (COALESCE((sum(vpruo.points_restants_ope)), '0'::bigint)), (COALESCE((sum(vpruo_1.points_restants_ope)), '0'::bigint)), (CASE WHEN ((count(af.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af.fk_utilisateur)) END), (CASE WHEN ((count(af_1.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_1.fk_utilisateur)) END), (CASE WHEN ((count(af_2.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_2.fk_utilisateur)) END), (CASE WHEN ((count(af_3.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_3.fk_utilisateur)) END), (CASE WHEN ((count(af_4.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_4.fk_utilisateur)) END), (CASE WHEN ((count(af_5.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_5.fk_utilisateur)) END), (CASE WHEN ((count(af_6.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_6.fk_utilisateur)) END), (CASE WHEN ((count(af_7.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_7.fk_utilisateur)) END), (CASE WHEN ((count(af_8.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_8.fk_utilisateur)) END), (CASE WHEN ((count(af_9.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_9.fk_utilisateur)) END), (CASE WHEN ((count(af_10.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_10.fk_utilisateur)) END), (CASE WHEN ((count(af_11.fk_utilisateur)) IS NULL) THEN '0'::bigint ELSE (count(af_11.fk_utilisateur)) END), (string_agg(DISTINCT (er.role_enseigne)::text, ', '::text)), au.login
  Sort Key: au.login
  Sort Method: quicksort  Memory: 281kB
  Buffers: shared hit=27082613 read=2278
Planning:
  Buffers: shared hit=2055 read=10
Planning Time: 38.350 ms
Execution Time: 156803.034 ms
